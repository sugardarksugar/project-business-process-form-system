"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.scanMysqlTableSchema = void 0;
const mysql_parser_1 = require("./mysql-parser");
function scanMysqlTableSchema(knex) {
    return __awaiter(this, void 0, void 0, function* () {
        const table_list = [];
        const [rows, fields] = yield knex.raw(`show tables`);
        const name = fields[0].name;
        for (const row of rows) {
            const table = row[name];
            const result = yield knex.raw(`show create table \`${table}\``);
            const sql = result[0][0]['Create Table'];
            const field_list = mysql_parser_1.parseCreateTable(sql);
            table_list.push({ name: table, field_list });
        }
        return table_list;
    });
}
exports.scanMysqlTableSchema = scanMysqlTableSchema;
