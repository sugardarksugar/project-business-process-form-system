#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const text_to_sqlite_proxy_1 = require("../db/text-to-sqlite-proxy");
const file_1 = require("../utils/file");
function main() {
    let mode;
    let type;
    const arg = process.argv[2];
    switch (arg) {
        case undefined:
            break;
        case '--factory': {
            mode = 'factory';
            break;
        }
        case '--singleton': {
            mode = 'singleton';
            break;
        }
        case '--commonjs':
        case '--cjs': {
            type = 'commonjs';
            break;
        }
        case '--module':
        case '--esm': {
            type = 'module';
            break;
        }
        default: {
            console.error('Error: unknown argument:', arg);
            process.exit(1);
        }
    }
    const packageFile = 'package.json';
    if (!type && fs_1.existsSync(packageFile)) {
        type = file_1.readPackageJSON(packageFile).type;
    }
    file_1.readErdFromStdin(text => {
        const code = text_to_sqlite_proxy_1.textToSqliteProxy(text, { mode, type });
        // eslint-disable-next-line no-console
        console.log(code);
    });
}
main();
